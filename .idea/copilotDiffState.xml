<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/bot/CryptoBot.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/bot/CryptoBot.java" />
              <option name="originalContent" value="package com.bot;&#10;&#10;import com.bot.api.CryptoAPI;&#10;import com.bot.config.BotConfig;&#10;import org.telegram.telegrambots.bots.TelegramLongPollingBot;&#10;import org.telegram.telegrambots.meta.TelegramBotsApi;&#10;import org.telegram.telegrambots.meta.api.methods.send.SendMessage;&#10;import org.telegram.telegrambots.meta.api.objects.Update;&#10;import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;&#10;&#10;public class CryptoBot extends TelegramLongPollingBot {&#10;&#10;    @Override&#10;    public String getBotUsername() {&#10;        return BotConfig.USERNAME;&#10;    }&#10;&#10;    @Override&#10;    public String getBotToken() {&#10;        return BotConfig.TOKEN;&#10;    }&#10;&#10;    @Override&#10;    public void onUpdateReceived(Update update) {&#10;        if (update.hasMessage() &amp;&amp; update.getMessage().hasText()) {&#10;            String msg = update.getMessage().getText();&#10;            String chatId = update.getMessage().getChatId().toString();&#10;&#10;            if (msg.startsWith(&quot;/start&quot;)) {&#10;                sendText(chatId, &quot;¡Hola! Soy CryptoBot. Usa /crypto &lt;moneda&gt;, /change &lt;moneda&gt;, /top, o /help para más info.&quot;);&#10;            } else if (msg.startsWith(&quot;/crypto&quot;)) {&#10;                String[] parts = msg.split(&quot; &quot;);&#10;                if (parts.length &lt; 2) {&#10;                    sendText(chatId, &quot;Uso: /crypto &lt;moneda&gt;&quot;);&#10;                } else {&#10;                    String coin = parts[1].toLowerCase();&#10;                    String result = CryptoAPI.getPrice(coin);&#10;                    sendText(chatId, result);&#10;                }&#10;            } else if (msg.startsWith(&quot;/change&quot;)) {&#10;                String[] parts = msg.split(&quot; &quot;);&#10;                if (parts.length &lt; 2) {&#10;                    sendText(chatId, &quot;Uso: /change &lt;moneda&gt;\nEjemplo: /change bitcoin&quot;);&#10;                } else {&#10;                    String coin = parts[1].toLowerCase();&#10;                    String result = CryptoAPI.getPriceWithChange(coin);&#10;                    sendText(chatId, result);&#10;                }&#10;            } else if (msg.startsWith(&quot;/top&quot;)) {&#10;                String result = CryptoAPI.getTopCryptos();&#10;                sendText(chatId, result);&#10;            } else if (msg.startsWith(&quot;/help&quot;)) {&#10;                String helpMessage = &quot; AYUDA - CRYPTOBOT\n\n&quot; +&#10;                        &quot; /crypto &lt;moneda&gt; - Precio actual\n&quot; +&#10;                        &quot;   Ejemplo: /crypto bitcoin\n\n&quot; +&#10;                        &quot; /change &lt;moneda&gt; - Precio con variación 24h\n&quot; +&#10;                        &quot;   Ejemplo: /change bitcoin\n&quot; +&#10;                        &quot;   Salida:  BTC → $65,000 USD | Cambio 24h: +2.4%\n\n&quot; +&#10;                        &quot; /top - Top 5 criptomonedas\n&quot; +&#10;                        &quot;   Muestra las 5 principales con precios y cambios\n\n&quot; +&#10;                        &quot; /help - Mostrar esta ayuda\n\n&quot; +&#10;                        &quot; Monedas populares:\n&quot; +&#10;                        &quot;bitcoin, ethereum, cardano, solana, dogecoin&quot;;&#10;                sendText(chatId, helpMessage);&#10;            }&#10;        }&#10;    }&#10;&#10;    private void sendText(String chatId, String text) {&#10;        try {&#10;            execute(new SendMessage(chatId, text));&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;    }&#10;&#10;    public static void main(String[] args) throws Exception {&#10;        TelegramBotsApi botsApi = new TelegramBotsApi(DefaultBotSession.class);&#10;        botsApi.registerBot(new CryptoBot());&#10;        System.out.println(&quot;CryptoBot está online!&quot;);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.bot;&#10;&#10;import com.bot.api.CryptoAPI;&#10;import com.bot.config.BotConfig;&#10;import org.telegram.telegrambots.bots.TelegramLongPollingBot;&#10;import org.telegram.telegrambots.meta.TelegramBotsApi;&#10;import org.telegram.telegrambots.meta.api.methods.send.SendMessage;&#10;import org.telegram.telegrambots.meta.api.objects.Update;&#10;import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;&#10;import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;&#10;import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;import java.util.HashSet;&#10;import java.util.Set;&#10;&#10;public class CryptoBot extends TelegramLongPollingBot {&#10;    &#10;    // Set para almacenar usuarios que ya han iniciado el bot&#10;    private Set&lt;Long&gt; activeUsers = new HashSet&lt;&gt;();&#10;&#10;    @Override&#10;    public String getBotUsername() {&#10;        return BotConfig.USERNAME;&#10;    }&#10;&#10;    @Override&#10;    public String getBotToken() {&#10;        return BotConfig.TOKEN;&#10;    }&#10;&#10;    @Override&#10;    public void onUpdateReceived(Update update) {&#10;        if (update.hasMessage() &amp;&amp; update.getMessage().hasText()) {&#10;            String msg = update.getMessage().getText();&#10;            long chatId = update.getMessage().getChatId();&#10;&#10;            // Manejo del primer contacto con el bot - mostrar mensaje de bienvenida&#10;            if (!activeUsers.contains(chatId)) {&#10;                sendWelcomeMessage(chatId);&#10;                return;&#10;            }&#10;&#10;            // Comandos habilitados después de activar el bot&#10;            if (msg.startsWith(&quot;/start&quot;)) {&#10;                sendText(chatId, &quot;✅ ¡BitBeeperBot ya está activo! Usa /crypto &lt;moneda&gt;, /change &lt;moneda&gt;, /top, o /help para más info.&quot;);&#10;            } else if (msg.startsWith(&quot;/crypto&quot;)) {&#10;                String[] parts = msg.split(&quot; &quot;);&#10;                if (parts.length &lt; 2) {&#10;                    sendText(chatId, &quot;❌ Uso correcto: /crypto &lt;moneda&gt;\n\nEjemplo: /crypto bitcoin&quot;);&#10;                } else {&#10;                    String coin = parts[1].toLowerCase();&#10;                    String result = CryptoAPI.getPrice(coin);&#10;                    sendText(chatId, result);&#10;                }&#10;            } else if (msg.startsWith(&quot;/change&quot;)) {&#10;                String[] parts = msg.split(&quot; &quot;);&#10;                if (parts.length &lt; 2) {&#10;                    sendText(chatId, &quot;❌ Uso correcto: /change &lt;moneda&gt;\n\nEjemplo: /change bitcoin&quot;);&#10;                } else {&#10;                    String coin = parts[1].toLowerCase();&#10;                    String result = CryptoAPI.getPriceWithChange(coin);&#10;                    sendText(chatId, result);&#10;                }&#10;            } else if (msg.startsWith(&quot;/top&quot;)) {&#10;                String result = CryptoAPI.getTopCryptos();&#10;                sendText(chatId, result);&#10;            } else if (msg.startsWith(&quot;/help&quot;)) {&#10;                String helpMessage = &quot; **AYUDA - BITBEEPERBOT**\n\n&quot; +&#10;                        &quot; `/crypto &lt;moneda&gt;` - Precio actual\n&quot; +&#10;                        &quot;   Ejemplo: `/crypto bitcoin`\n\n&quot; +&#10;                        &quot; `/change &lt;moneda&gt;` - Precio con variación 24h\n&quot; +&#10;                        &quot;   Ejemplo: `/change bitcoin`\n&quot; +&#10;                        &quot;   Salida:  BTC → $65,000 USD | Cambio 24h: +2.4%\n\n&quot; +&#10;                        &quot; `/top` - Top 5 criptomonedas\n&quot; +&#10;                        &quot;   Muestra las 5 principales con precios y cambios\n\n&quot; +&#10;                        &quot; `/help` - Mostrar esta ayuda\n\n&quot; +&#10;                        &quot; **Monedas populares:**\n&quot; +&#10;                        &quot;`bitcoin`, `ethereum`, `cardano`, `solana`, `dogecoin`&quot;;&#10;                sendTextWithMarkdown(chatId, helpMessage);&#10;            } else {&#10;                sendText(chatId, &quot;❓ Comando no reconocido. Usa /help para ver todos los comandos disponibles.&quot;);&#10;            }&#10;        }&#10;        &#10;        // Manejo de botones inline (callbacks)&#10;        else if (update.hasCallbackQuery()) {&#10;            String callbackData = update.getCallbackQuery().getData();&#10;            long chatId = update.getCallbackQuery().getMessage().getChatId();&#10;            &#10;            if (callbackData.equals(&quot;start_bot&quot;)) {&#10;                activeUsers.add(chatId);&#10;                sendStartMessage(chatId);&#10;                &#10;                // Responder al callback para quitar el loading&#10;                try {&#10;                    execute(new org.telegram.telegrambots.meta.api.methods.AnswerCallbackQuery(&#10;                        update.getCallbackQuery().getId()));&#10;                } catch (Exception e) {&#10;                    e.printStackTrace();&#10;                }&#10;            }&#10;        }&#10;    }&#10;&#10;    private void sendWelcomeMessage(long chatId) {&#10;        SendMessage message = new SendMessage();&#10;        message.setChatId(String.valueOf(chatId));&#10;        message.setParseMode(&quot;Markdown&quot;);&#10;        &#10;        String welcomeText = &quot; **¡Bienvenido a BitBeeperBot!** \n\n&quot; +&#10;                &quot;Tu asistente personal para el mundo de las **criptomonedas** \n\n&quot; +&#10;                &quot; **¿Qué puedo hacer por ti?**\n&quot; +&#10;                &quot;•  Consultar precios en tiempo real\n&quot; +&#10;                &quot;•  Ver variaciones de 24 horas\n&quot; +&#10;                &quot;•  Mostrar el TOP 5 de criptomonedas\n&quot; +&#10;                &quot;•  Ayudarte con comandos y ejemplos\n\n&quot; +&#10;                &quot; **Datos actualizados desde CoinGecko**\n&quot; +&#10;                &quot;⚡ **Respuestas instantáneas**\n&quot; +&#10;                &quot; **100% gratuito y seguro**\n\n&quot; +&#10;                &quot; **Haz clic en 'Iniciar' para comenzar a explorar el mundo crypto!**&quot;;&#10;        &#10;        message.setText(welcomeText);&#10;        &#10;        // Crear botón inline &quot;Iniciar&quot;&#10;        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();&#10;        List&lt;List&lt;InlineKeyboardButton&gt;&gt; rows = new ArrayList&lt;&gt;();&#10;        List&lt;InlineKeyboardButton&gt; row = new ArrayList&lt;&gt;();&#10;        &#10;        InlineKeyboardButton startButton = new InlineKeyboardButton();&#10;        startButton.setText(&quot; Iniciar BitBeeperBot&quot;);&#10;        startButton.setCallbackData(&quot;start_bot&quot;);&#10;        row.add(startButton);&#10;        rows.add(row);&#10;        &#10;        keyboard.setKeyboard(rows);&#10;        message.setReplyMarkup(keyboard);&#10;        &#10;        try {&#10;            execute(message);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;    }&#10;&#10;    private void sendStartMessage(long chatId) {&#10;        String startText = &quot;✅ **¡BitBeeperBot activado!** \n\n&quot; +&#10;                &quot; **Ahora puedes usar todos los comandos:**\n\n&quot; +&#10;                &quot; `/crypto bitcoin` - Precio actual\n&quot; +&#10;                &quot; `/change ethereum` - Precio con cambio 24h\n&quot; +&#10;                &quot; `/top` - Top 5 criptomonedas\n&quot; +&#10;                &quot; `/help` - Lista completa de comandos\n\n&quot; +&#10;                &quot; **¡Comienza escribiendo cualquier comando!**\n&quot; +&#10;                &quot; Ejemplo: `/crypto bitcoin`&quot;;&#10;        &#10;        sendTextWithMarkdown(chatId, startText);&#10;    }&#10;&#10;    private void sendText(long chatId, String text) {&#10;        try {&#10;            execute(new SendMessage(String.valueOf(chatId), text));&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;    }&#10;&#10;    private void sendTextWithMarkdown(long chatId, String text) {&#10;        SendMessage message = new SendMessage();&#10;        message.setChatId(String.valueOf(chatId));&#10;        message.setText(text);&#10;        message.setParseMode(&quot;Markdown&quot;);&#10;        &#10;        try {&#10;            execute(message);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;    }&#10;&#10;    public static void main(String[] args) throws Exception {&#10;        TelegramBotsApi botsApi = new TelegramBotsApi(DefaultBotSession.class);&#10;        botsApi.registerBot(new CryptoBot());&#10;        System.out.println(&quot;CryptoBot está online!&quot;);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>